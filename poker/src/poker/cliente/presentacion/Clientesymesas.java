/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package poker.cliente.presentacion;

import java.awt.Color;
import java.awt.Image;
import java.util.HashMap;
import java.util.Iterator;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import poker.cliente.negocio.PokerClient;
import javax.swing.DefaultListModel;
import poker.cliente.negocio.OnPackageListenerClient;
import poker.servidor.datos.Jugador;
import poker.servidor.negocio.Mesa;

/**
 *
 * @author LIMBERT
 */
public class Clientesymesas extends javax.swing.JPanel implements OnPackageListenerClient{
//private String[] datos = {"ana","angel","miguel","adriana"};
    private PokerClient cliente = null;
    private DefaultListModel usuarios = null;
    private int cantidadmesas = 0;
    private int idButton1 = 1;
    private int idButton2 = 2;
  // private HashMap<Integer, Rectangle> ms;
    
    /**
     * Creates new form NewJPanel
     */
    public Clientesymesas(PokerClient cliente) {
        initComponents();
        this.cliente = cliente;
        cargarjlist();
        pintarmesa();
        
       
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList2 = new javax.swing.JList<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        jList3 = new javax.swing.JList<>();

        setBackground(new java.awt.Color(0, 51, 51));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton1.setBackground(new java.awt.Color(0, 204, 0));
        jButton1.setMaximumSize(new java.awt.Dimension(90, 90));
        jButton1.setMinimumSize(new java.awt.Dimension(90, 90));
        jButton1.setPreferredSize(new java.awt.Dimension(90, 90));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(211, 11, -1, -1));

        jScrollPane1.setViewportView(jList1);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(19, 57, 129, 221));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 204));
        jLabel1.setText("Lista de jugadores");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(19, 22, -1, -1));

        jButton2.setBackground(new java.awt.Color(51, 204, 0));
        jButton2.setPreferredSize(new java.awt.Dimension(90, 90));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(211, 119, -1, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 204));
        jLabel3.setText("vacia");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 10, 70, 70));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 204));
        jLabel4.setText("vacia");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 110, 70, 90));

        jButton3.setText("jButton3");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(211, 255, 98, -1));
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(-10, -40, -1, 1100));

        jScrollPane2.setViewportView(jList2);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 10, 80, 90));

        jScrollPane3.setViewportView(jList3);

        add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 120, 80, 90));
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        idButton1 = idButton1 +2;
        idButton2 = idButton2 +2;
        if (cantidadmesas<idButton1) {
           idButton1 = 1;
           idButton2 = 2; 
        }
        pintarmesa();
//jList1.setListData("pepe","juan"); // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    cliente.ingresarMesa(idButton1);
    
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
    cliente.ingresarMesa(idButton2);        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JList<String> jList1;
    private javax.swing.JList<String> jList2;
    private javax.swing.JList<String> jList3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    // End of variables declaration//GEN-END:variables

    /**
     * Metodo que carga la lista de los jugadores en el jlist
     * @param
     */
    private void cargarjlist(){
        HashMap jugadores = cliente.getJugadores();
        usuarios = new DefaultListModel();
        jList1.setModel(usuarios);
        if(jugadores != null){
                Iterator<Jugador> it = jugadores.values().iterator();
                
                while(it.hasNext()) {
                    Jugador j = (Jugador) it.next();
                    usuarios.addElement(j.getNickName());
                    System.out.println("jug: "+ j.getNickName());
                }            

            }
        
       jList1.setModel(usuarios);
    }

        public void cargarmesa(){
        HashMap<Integer, Mesa> mesas = cliente.getMesas();
            if(mesas != null){
                Iterator<Mesa> it = mesas.values().iterator();
                cantidadmesas = mesas.size();
                
                System.out.println("count " + String.valueOf(mesas.size()));
                while(it.hasNext()) {
                    Mesa m = (Mesa) it.next();

                }            
            } System.out.println("cantidad de mesas  " + String.valueOf(cantidadmesas));
        }
    public void pintarmesa(){
        jButton2.setVisible(true);
        if (cantidadmesas >= idButton1) {
            jButton1.setText("mesa  " + String.valueOf(idButton1));
            jLabel3.setText(listarmesa(idButton1));
            if (cantidadmesas >= idButton2) {
                jButton2.setText("mesa  " + String.valueOf(idButton2));
                jLabel4.setText(listarmesa(idButton2));
            }else{
                jButton2.setVisible(false);
                jLabel4.setText("vacia");
            }
        }
 
    }
     private String[] listarmesa(int id){
       // int id = 1;
       String[] listaj=null;
        Mesa m = (Mesa) cliente.getMesas().get(id);
        HashMap<Integer, Jugador> lista = m.getJugadores();
        for (Jugador j : lista.values()) {
            System.out.println("jugador en mesa 1 : " + j.getNickName());
           listaj
            listaj = listaj+j.getNickName()+" ";
        }
        return listaj;
    } 
    public void subirimangen(){
     System.out.println("imagen en el boton");
     ImageIcon face = new javax.swing.ImageIcon(getClass().getResource("/poker/cliente/presentacion/botonmesa.jpg"));
     jButton2.setIcon(face);
     jButton1.setBackground(Color.GREEN);
     System.out.println("imagen en el boton ooo");
    }
    @Override
    public void onNuevaMesa(Mesa mesa) {
        System.out.println("poker.cliente.presentacion.Clientesymesas.onNuevaMesa()");
        cargarmesa();
        pintarmesa();
    }

    @Override
    public void onMesaLlena(int idMesa, boolean estado) {
        
    }

    @Override
    public void onNuevoJugador(Jugador jg) {
       System.out.print("entro a un nuevo  " + jg.getNickName());
        cargarjlist();
        
//throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void onJugadorDesconectado(Jugador jg) {
        cargarjlist();
       //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }    
    
}

class UsuarioModel{
    private int key = 0;
    private String userName = "";
    /**
     * Constructor de clase
     * @param key identificador unico de usuario
     * @param userName nombre de usuario de la persona que acaba de conectarse
     * @param ip ip del cliente que se conecto
     */
    public UsuarioModel(int key, String userName){
        this.key = key;
        this.userName = userName;        
    }
    public int getKey(){
        return this.key;
    }
    public String getUserName(){
        return this.userName;
    }
    @Override
    public String toString(){
        return this.userName;
    }
}
