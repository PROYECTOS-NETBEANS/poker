/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package poker.cliente.presentacion;

import java.awt.event.ActionListener;
import java.util.HashMap;
import java.util.Iterator;
import poker.cliente.negocio.PokerClient;
import javax.swing.DefaultListModel;
import poker.cliente.negocio.OnPackageListenerClient;
import poker.servidor.datos.Jugador;
import poker.servidor.negocio.Mesa;

/**
 *
 * @author LIMBERT
 */
public class Clientesymesas extends javax.swing.JPanel implements OnPackageListenerClient{
//private String[] datos = {"ana","angel","miguel","adriana"};
    private PokerClient cliente = null;
    private DefaultListModel usuarios = null;
    //private ActionListener lst =null;
    private int cantidadmesas = 0;
    private int idButton1 = 1;
    private int idButton2 = 2;
  // private HashMap<Integer, Rectangle> ms;
    
    /**
     * Creates new form NewJPanel
     */
    public Clientesymesas(PokerClient cliente,ActionListener lst) {
        initComponents();
        this.cliente = cliente;
        //this.lst=lst;
        cargarListaJugadores();
        pintarmesa();
        jButton2.addActionListener(lst);
        jButton2.setActionCommand("btnverde");
        jButton1.addActionListener(lst);
        jButton1.setActionCommand("btnverde");
        
       
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstJugadores = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        lstListaArriba = new javax.swing.JList<>();
        jButton4 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        lstListaAbajo = new javax.swing.JList<>();
        jButton5 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(0, 51, 51));
        setMaximumSize(new java.awt.Dimension(450, 350));
        setMinimumSize(new java.awt.Dimension(450, 350));
        setName(""); // NOI18N
        setPreferredSize(new java.awt.Dimension(450, 350));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton1.setBackground(new java.awt.Color(0, 204, 0));
        jButton1.setMaximumSize(new java.awt.Dimension(90, 90));
        jButton1.setMinimumSize(new java.awt.Dimension(90, 90));
        jButton1.setPreferredSize(new java.awt.Dimension(90, 90));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(211, 11, -1, -1));

        jScrollPane1.setViewportView(lstJugadores);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(19, 57, 129, 221));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 204));
        jLabel1.setText("Lista de jugadores");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(19, 22, -1, -1));

        jButton2.setBackground(new java.awt.Color(51, 204, 0));
        jButton2.setPreferredSize(new java.awt.Dimension(90, 90));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(211, 119, -1, -1));

        jButton3.setText("Mas mesas");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 250, 90, -1));

        jScrollPane2.setViewportView(lstListaArriba);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 10, 80, 90));

        jButton4.setText("salir");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 250, 80, -1));

        jScrollPane3.setViewportView(lstListaAbajo);

        add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 120, 80, 90));

        jButton5.setText("jButton5");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 220, -1, -1));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/poker/cliente/presentacion/screensaver-fantasy-wallpaper-inspiration-widescreen-gallery-sfondi-screensavers-16962.jpg"))); // NOI18N
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        idButton1 = idButton1 +2;
        idButton2 = idButton2 +2;
        if (cantidadmesas<idButton1) {
           idButton1 = 1;
           idButton2 = 2; 
        }
        pintarmesa();
//jList1.setListData("pepe","juan"); // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    cliente.ingresarMesa(idButton1);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
    cliente.ingresarMesa(idButton2);     
    
// TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
      System.exit(0);
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        
    }//GEN-LAST:event_jButton5ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JList<String> lstJugadores;
    private javax.swing.JList<String> lstListaAbajo;
    private javax.swing.JList<String> lstListaArriba;
    // End of variables declaration//GEN-END:variables

    /**
     * Metodo que carga la lista de los jugadores
     * @param
     */
    private void cargarListaJugadores(){
        HashMap jugadores = cliente.getJugadores();
        usuarios = new DefaultListModel();
        lstJugadores.setModel(usuarios);
        if(jugadores != null){
                Iterator<Jugador> it = jugadores.values().iterator();
                
                while(it.hasNext()) {
                    Jugador j = (Jugador) it.next();
                    usuarios.addElement(j.getNickName());
                    System.out.println("jug: "+ j.getNickName());
                }            

            }
        
       lstJugadores.setModel(usuarios);
    }
/**
 * este metodo contaviliza la cantidad de mesas exixtente
 */
        public void cargarmesa(){
              cantidadmesas = cliente.getMesas().size();
             
        }
    /**
    * este metodo pinta los botones con el numero de las mesas y llena la lista
    * de los jugadores de cada mesa
    */
        private void pintarmesa(){
        jButton2.setVisible(true);
        lstListaAbajo.setVisible(true);
        if (cantidadmesas >= idButton1) {
            jButton1.setText("mesa  " + String.valueOf(idButton1));
                cargarListaJugadoresArriba();
            if (cantidadmesas >= idButton2) {
                jButton2.setText("mesa  " + String.valueOf(idButton2));
                cargarListaJugadoresAbajo();
            }else{
                jButton2.setVisible(false);
                lstListaAbajo.setVisible(false);
            }
        }
 
    }
    /**
    * este metodo carga lista de jugadores de la opcion uno
    */
    private void cargarListaJugadoresArriba(){
            usuarios = new DefaultListModel();
            lstListaArriba.setModel(usuarios);
            lstListaArriba.setModel(listarmesa(idButton1, usuarios));
    }
    /**
    * este metodo carga lista de jugadores de la opcion dos
    */
    private void cargarListaJugadoresAbajo(){
            usuarios = new DefaultListModel();
            lstListaAbajo.setModel(usuarios);
            lstListaAbajo.setModel(listarmesa(idButton2, usuarios));
    }
    /**
     * este metodo te devuelve la lista de los jugadores de una mesa
     * @param id identificador de la mesa
     * @param usuarios en un modelo para cargar la jlist
     * @return DefaultListModel
     */
    
    private DefaultListModel listarmesa(int id, DefaultListModel usuarios){
        Mesa m = (Mesa) cliente.getMesas().get(id);
        HashMap<Integer, Jugador> lista = m.getJugadores();
        for (Jugador j : lista.values()) {
            System.out.println("jugador en mesa 1 : " + j.getNickName());
           usuarios.addElement(j.getNickName());
        }
        return usuarios;
    } 
    
    @Override
    public void onNuevaMesa(Mesa mesa) {
        System.out.println("mesa : " + mesa.getId());
        cargarmesa();
        pintarmesa();
    }
    @Override
    public void onNuevoJugador(Jugador jg) {
       System.out.print("entro a un nuevo  " + jg.getNickName());
        cargarListaJugadores();
    }

    @Override
    public void onJugadorDesconectado(Jugador jg) {
        cargarListaJugadores();
        cargarListaJugadoresArriba();
        //cargarListaJugadoresAbajo();
    }    

    @Override
    public void onJugadorIngresaAMesa(Jugador jg, Mesa m) {
        System.out.println("[clientesymesa.onJugadorIngresaAMesa]");
        this.pintarmesa();
    }

    @Override
    public void onMessageServidor(String msg, int idMesa) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
    
}

class UsuarioModel{
    private int key = 0;
    private String userName = "";
    /**
     * Constructor de clase
     * @param key identificador unico de usuario
     * @param userName nombre de usuario de la persona que acaba de conectarse
     * @param ip ip del cliente que se conecto
     */
    public UsuarioModel(int key, String userName){
        this.key = key;
        this.userName = userName;        
    }
    public int getKey(){
        return this.key;
    }
    public String getUserName(){
        return this.userName;
    }
    @Override
    public String toString(){
        return this.userName;
    }
}
